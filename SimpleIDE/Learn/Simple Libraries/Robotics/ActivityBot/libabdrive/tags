!_TAG_FILE_FORMAT	1	/original ctags format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
main	C:/Users/alindsay/Documents/SimpleIDE/Learn/Simple Libraries/ActivityBot 2013-09-03b1/libabdrive/libabdrive.c	/^int main()                     $/
cog	abdrive.c	/^static int cog = 0;$/
servoCog2	abdrive.c	/^static int servoCog2 = 0;$/
stack	abdrive.c	/^static unsigned int stack[(160 + (250 * 4)) \/ 4];$/
rampStep	abdrive.c	/^static int rampStep = 4;$/
speedLimit	abdrive.c	/^static int speedLimit = 128;$/
spdrL	abdrive.c	/^static int spdrL[120];$/
spdmL	abdrive.c	/^static int spdmL[120];$/
spdrR	abdrive.c	/^static int spdrR[120];$/
spdmR	abdrive.c	/^static int spdmR[120];$/
a	abdrive.c	/^static int a = 0;$/
r	abdrive.c	/^static int r = 0;$/
eeAddr	abdrive.c	/^static int eeAddr;$/
trimctr	abdrive.c	/^static volatile int trimctr = 0;$/
trimticksF	abdrive.c	/^static volatile int trimticksF = 0;$/
trimticksB	abdrive.c	/^static volatile int trimticksB = 0;$/
trimFL	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
trimFR	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
trimBL	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
trimBR	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
trimticksF	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
trimticksB	abdrive.c	/^static volatile int trimFL, trimFR, trimBL, trimBR, trimticksF, trimticksB;$/
dca	abdrive.c	/^static volatile int dca, trimticks;$/
trimticks	abdrive.c	/^static volatile int dca, trimticks;$/
leftPrev	abdrive.c	/^static volatile int leftPrev, rightPrev;$/
rightPrev	abdrive.c	/^static volatile int leftPrev, rightPrev;$/
edL	abdrive.c	/^static volatile int edL;                                      \/\/ error distance left$/
edR	abdrive.c	/^static volatile int edR;                                      \/\/ error distance right$/
pL	abdrive.c	/^static volatile int pL;                                       \/\/ proportional left$/
pR	abdrive.c	/^static volatile int pR;                                       \/\/ proportional right$/
iL	abdrive.c	/^static volatile int iL;                                   \/\/ integral left$/
iR	abdrive.c	/^static volatile int iR;                                   \/\/ integral right$/
eaL	abdrive.c	/^static volatile int eaL = 0;$/
eaR	abdrive.c	/^static volatile int eaR = 0;$/
us	abdrive.c	/^static volatile int us;$/
kp	abdrive.c	/^static volatile int kp[6];$/
sPinL	abdrive.c	/^static volatile int sPinL = 12, sPinR = 13;   \/\/ Global variables$/
sPinR	abdrive.c	/^static volatile int sPinL = 12, sPinR = 13;   \/\/ Global variables$/
ePinL	abdrive.c	/^static volatile int ePinL = 14, ePinR = 15;$/
ePinR	abdrive.c	/^static volatile int ePinL = 14, ePinR = 15;$/
tcL	abdrive.c	/^static volatile int tcL;$/
tcR	abdrive.c	/^static volatile int tcR;$/
tiL	abdrive.c	/^static volatile int tiL;$/
ticksL	abdrive.c	/^static volatile int ticksL = 0;$/
ticksR	abdrive.c	/^static volatile int ticksR = 0;$/
record	abdrive.c	/^static volatile int record = 0;               \/\/ Record values to an array$/
rv	abdrive.c	/^static volatile int rv[2600];$/
ridx	abdrive.c	/^static volatile int ridx = 0;$/
speedL	abdrive.c	/^static volatile int speedL;      \/\/ Requested servo speed left$/
speedR	abdrive.c	/^static volatile int speedR;      \/\/ Requested servo speed right$/
tiR	abdrive.c	/^static volatile int tiR;$/
stateL	abdrive.c	/^static volatile int stateL;$/
stateR	abdrive.c	/^static volatile int stateR;$/
elCntL	abdrive.c	/^static volatile int elCntL;$/
elCntR	abdrive.c	/^static volatile int elCntR;$/
cntrLidx	abdrive.c	/^static volatile int cntrLidx;$/
cntrRidx	abdrive.c	/^static volatile int cntrRidx;$/
cntrLval	abdrive.c	/^static volatile int cntrLval;$/
cntrRval	abdrive.c	/^static volatile int cntrRval;$/
pwL	abdrive.c	/^static volatile int* pwL;$/
pwR	abdrive.c	/^static volatile int* pwR;$/
spdL	abdrive.c	/^static volatile int* spdL;$/
spdR	abdrive.c	/^static volatile int* spdR;$/
etpsR	abdrive.c	/^static volatile int etpsR;    \/\/ encoder ticks per second requested right$/
etpsL	abdrive.c	/^static volatile int etpsL;    \/\/ encoder ticks per second requested right$/
dlc	abdrive.c	/^static volatile int dlc;      \/\/ distance left calculated$/
drc	abdrive.c	/^static volatile int drc;      \/\/ distance right calculated$/
pcount	abdrive.c	/^static volatile int pcount;$/
_servoPulseReps	abdrive.c	/^volatile unsigned int _servoPulseReps;$/
_sprOld	abdrive.c	/^static volatile unsigned int _sprOld;$/
_sprNext	abdrive.c	/^static volatile unsigned int _sprNext;$/
ssiL	abdrive.c	/^static volatile int ssiL; \/\/ servo speeed interpolated left$/
ssiR	abdrive.c	/^static volatile int ssiR; \/\/ servo speeed interpolated right$/
driveL	abdrive.c	/^static volatile int driveL;$/
driveR	abdrive.c	/^static volatile int driveR;$/
phsL	abdrive.c	/^static volatile int phsL;$/
phsR	abdrive.c	/^static volatile int phsR;$/
phsLr	abdrive.c	/^static volatile int phsLr;$/
phsRr	abdrive.c	/^static volatile int phsRr;$/
trimFunction	abdrive.c	/^static int trimFunction = 1;$/
encoderFeedback	abdrive.c	/^static int encoderFeedback = 1;$/
intTabSetup	abdrive.c	/^static int intTabSetup = 0;$/
dlca	abdrive.c	/^static volatile int dlca = 0;                                 \/\/ distance left calculated (accumulated)$/
drca	abdrive.c	/^static volatile int drca = 0;                                 \/\/ distance right calculated (accumulated)$/
dsr	abdrive.c	/^static volatile int dsr = 400;$/
zeroDelay	abdrive.c	/^volatile int zeroDelay = ON;$/
speedLprev	abdrive.c	/^static int speedLprev = 0, speedRprev = 0;$/
speedRprev	abdrive.c	/^static int speedLprev = 0, speedRprev = 0;$/
xbee	abdrive.c	/^fdserial *xbee;$/
xbee_setup	abdrive.c	/^int xbee_setup = 0;$/
drive_getTicks	abdrive.c	/^void drive_getTicks(int *left, int *right)$/
drive_servoPins	abdrive.c	/^void drive_servoPins(int servoPinLeft, int servoPinRight)          \/\/ drivePins function$/
drive_encoderPins	abdrive.c	/^void drive_encoderPins(int encPinLeft, int encPinRight)          \/\/ drivePins function$/
drive_pins	abdrive.c	/^void drive_pins(int servoPinLeft, int servoPinRight, int encPinLeft, int encPinRight)          \/\/ drivePins function$/
drive_setMaxSpeed	abdrive.c	/^void drive_setMaxSpeed(int maxTicksPerSec)$/
drive_setRampStep	abdrive.c	/^void drive_setRampStep(int stepsize)$/
drive_feedback	abdrive.c	/^void drive_feedback(int enabled)$/
drive_trim	abdrive.c	/^void drive_trim(int enabled)$/
drive_com	abdrive.c	/^void drive_com(int arrayLcnt, int arrayRcnt, $/
drive_displayInterpolation	abdrive.c	/^void drive_displayInterpolation(void)$/
drive_displayInterpolation	abdrive.c	/^void drive_displayInterpolation(void)$/
drive_trimDisplay	abdrive.c	/^void drive_trimDisplay(void)$/
interpolation_table_setup	abdrive.c	/^void interpolation_table_setup()$/
drive_close	abdrive.c	/^void drive_close()                             \/\/ driveStop function$/
drive_trimSet	abdrive.c	/^void drive_trimSet(int direction, int side, int value)$/
drive_goto	abdrive.c	/^void drive_goto(int left, int right)$/
drive_rampStep	abdrive.c	/^void drive_rampStep(int left, int right)$/
drive_ramp	abdrive.c	/^void drive_ramp(int left, int right)$/
interpolate	abdrive.c	/^void interpolate(int *ltmp, int *rtmp)$/
set_drive_speed	abdrive.c	/^void set_drive_speed(int left, int right)$/
drive_speed	abdrive.c	/^void drive_speed(int left, int right)        \/\/ driveSpeeds function$/
encoders	abdrive.c	/^void encoders(void *par)$/
drive_record	abdrive.c	/^void drive_record(int startStop)$/
drive_displayControlSystem	abdrive.c	/^void drive_displayControlSystem(int start, int end)$/
ABDRIVE_H	abdrive.h	27
_ActivityBot_EE_Start_	abdrive.h	49
_ActivityBot_EE_Pins_	abdrive.h	53
_ActivityBot_EE_Trims_	abdrive.h	57
_ActivityBot_EE_Left_	abdrive.h	61
_ActivityBot_EE_Right_	abdrive.h	65
_ActivityBot_EE_End_	abdrive.h	73
AB_RIGHT	abdrive.h	77
AB_LEFT	abdrive.h	81
AB_FORWARD	abdrive.h	86
AB_BACKWARD	abdrive.h	90
OFF	abdrive.h	94
ON	abdrive.h	98
